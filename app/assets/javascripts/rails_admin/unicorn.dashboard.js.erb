// functions are called from chart partial

poppies = {
  // popovers in dashboard page
  popnow: function(){
    // === Popovers === //    
    var placement = 'bottom';
    var trigger = 'hover';
    var html = true;

    $('.popover-ambassadors').popover({
       placement: placement,
       content: '<span class="content-big">36094</span> <span class="content-small">Total Visits</span><br /><span class="content-big">220</span> <span class="content-small">Visits Today</span><br /><span class="content-big">200</span> <span class="content-small">Visits Yesterday</span><br /><span class="content-big">5677</span> <span class="content-small">Visits in This Month</span>',
       trigger: trigger,
       html: html   
    });
    $('.popover-points').popover({
       placement: placement,
       content: '<span class="content-big">1433</span> <span class="content-small">Total Users</span><br /><span class="content-big">0</span> <span class="content-small">Registered Today</span><br /><span class="content-big">0</span> <span class="content-small">Registered Yesterday</span><br /><span class="content-big">16</span> <span class="content-small">Registered Last Week</span>',
       trigger: trigger,
       html: html   
    });
    $('.popover-posts').popover({
       placement: placement,
       content: '<span class="content-big">8650</span> <span class="content-small">Total Orders</span><br /><span class="content-big">29</span> <span class="content-small">Pending Orders</span><br /><span class="content-big">32</span> <span class="content-small">Orders Today</span><br /><span class="content-big">64</span> <span class="content-small">Orders Yesterday</span>',
       trigger: trigger,
       html: html   
    });
    $('.popover-badges').popover({
       placement: placement,
       content: '<span class="content-big">2968</span> <span class="content-small">All Tickets</span><br /><span class="content-big">48</span> <span class="content-small">New Tickets</span><br /><span class="content-big">495</span> <span class="content-small">Solved</span>',
       trigger: trigger,
       html: html   
    });
  }
}

mainchart = {
  // main chart
  mychart: function(s1, s2, type){
    // default parameters
    s1 = typeof s1 !== 'undefined' ? s1 : 1;
    s2 = typeof s2 !== 'undefined' ? s2 : 2;
    type = typeof type !== 'undefined' ? type : 'daily';
    // prepare the main chart data
    var s1_data = [], s2_data = [];
    $( '#serie_' + s1 + ' span' ).each(function(i) {
      s1_data.push( [$('#serie_'+s1+' span.'+i).attr('data-custom-date'), $('#serie_'+s1+' span.'+i).html()] );
    });
    $( '#serie_' + s2 + ' span' ).each(function(i) {
      s2_data.push( [$('#serie_'+s2+' span.'+i).attr('data-custom-date'), $('#serie_'+s2+' span.'+i).html()] );
    });
    var s1_label = $('#serie_'+s1).attr('data-custom-label');
    var s1_color = '#B1FFA9';
    var s2_label = $('#serie_'+s2).attr('data-custom-label');
    var s2_color = '#AFD8F8';
    // calculate max value for Y axis from data series
    var maxY1 = 0, maxY2 = 0;
    var mxarray1 = [], mxarray2 = [];
    $('#serie_' +s1+ ' span').each(function(){
      mxarray1.push(parseInt($(this).html()));
    });
    maxY1 = Math.max.apply(Math, mxarray1);
    $('#serie_' +s2+ ' span').each(function(){
      mxarray2.push(parseInt($(this).html()));
    });
    maxY2 = Math.max.apply(Math, mxarray2);
    // xAxis
    var xaxs = { mode: "time", timezone: "browser" };
    if ( type=='monthly' ) {
      xaxs = { mode: "time", timezone: "browser", minTickSize: [1, "month"], min: (new Date(2013, 0, 1)).getTime(), max: (new Date(2014, 0, 1)).getTime() }
    }
    // Make chart
    var plot = $.plot(
      $('.chart'),
        [ {data: s1_data, label: s1_label, color: s1_color}, {data: s2_data, label: s2_label, color: s2_color, yaxis: 2} ],
        {
          series: {
            lines: { show: true },
            points: { show: false }
          },
          grid: {
            hoverable: true,
            clickable: true
          },
          xaxis: xaxs,
          yaxes: [
            { min: 0, max: Math.round( maxY1 * 1.2 ) },
            { min: 0, max: Math.round( maxY2 * 1.2 ), position: "rigth" }
          ]
        }
      );
    // === Point hover in chart === //
    var previousPoint = null;
    $('.chart').bind('plothover', function (event, pos, item){
      if( item ) {
        if( previousPoint != item.dataIndex ) {
          previousPoint = item.dataIndex;
          $('#tooltip').fadeOut(50,function(){
            $(this).remove();
          });
          var x = item.datapoint[0].toFixed(2), y = item.datapoint[1].toFixed(2);
          unicorn.flot_tooltip(
            item.pageX,
            item.pageY,
            $.datepicker.formatDate("dd/mm", new Date(parseInt(x))) + " = " + parseInt(y) + " " +
                   item.series.label
          );
        }
      } else {
        $('#tooltip').fadeOut(50,function(){
          $(this).remove();
        });
        previousPoint = null;
      }
    });
  }
}

unicorn = {
    // === Peity charts === //
    peity: function(){    
      $.fn.peity.defaults.line = {
        strokeWidth: 1,
        delimeter: ",",
        height: 24,
        max: null,
        min: 0,
        width: 50
      };
      $.fn.peity.defaults.bar = {
        delimeter: ",",
        height: 24,
        max: null,
        min: 0,
        width: 50
      };
      $(".peity_line_good span").peity("line", {
        colour: "#B1FFA9",
        strokeColour: "#459D1C"
      });
      $(".peity_line_bad span").peity("line", {
        colour: "#FFC4C7",
        strokeColour: "#BA1E20"
      }); 
      $(".peity_line_neutral span").peity("line", {
        colour: "#CCCCCC",
        strokeColour: "#757575"
      });
      $(".peity_bar_good span").peity("bar", {
        colour: "#459D1C"
      });
      $(".peity_bar_bad span").peity("bar", {
        colour: "#BA1E20"
      }); 
      $(".peity_bar_neutral span").peity("bar", {
        colour: "#757575"
      });
    },

    // === Tooltip for flot charts === //
    flot_tooltip: function(x, y, contents) {
      
      $('<div id="tooltip">' + contents + '</div>').css( {
        top: y + 5,
        left: x + 5
      }).appendTo("body").fadeIn(200);
    }
}